name: Deploy web

on:
  workflow_dispatch:

env:
  VERCEL_ORG_ID: ${{ vars.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ vars.VERCEL_PROJECT_ID }}

jobs:
  run-tests:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    defaults:
      run:
        working-directory: ./tekblogg-web
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.2

      - name: Cache node modules
        id: cache-bun
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ./tekblogg-web/node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./tekblogg-web/bun.lockb') }}

      - name: Cache next build
        id: cache-next
        uses: actions/cache@v3
        with:
          path: |
            /home/runner/.bun/install/cache
            ./tekblogg-web/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('./tekblogg-web/bun.lockb') }}-${{ hashFiles('./tekblogg-web/*.[jt]s', './tekblogg-web/*.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('./tekblogg-web/bun.lockb') }}-

      - name: Install dependencies
        run: bun install && bun run cypress install #The cypress binary is not installed by default yet on bun, see https://github.com/cypress-io/github-action/issues/585

      - name: Lint
        run: bun run lint && bun run ts-lint

      - name: Build, run and test
        run: bun run build && bun run start-and-test:production

  deploy-production:
    needs: run-tests
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
